name: Release

on: 
    workflow_dispatch:
     inputs:
      ReleaseMode:
        description: ga,beta,alpha
        required: false
      buildNumber:
        description: the buildnumber used only for beta
        required: false


jobs:
  build:
    runs-on: st-win
    steps: 
    - name: Checkout
      uses: actions/checkout@v2.3.3
      
    - name: Setup Nuget
      uses: NuGet/setup-nuget@v1.0.5

    - name: Setup MSBuild 
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore Nuget Packages & Fake dependencies
      run: |
            "restore"
            nuget.exe restore sourcetree.sln
            & nuget.exe install Nunit -version 3.2.0 -OutputDirectory packages
            & nuget.exe restore .fake\packages.config -OutputDirectory packages
            
    - name: Setup Environment Configuration
      run: |
            .\build.cmd "Environment" ${{ github.event.inputs.ReleaseMode}} ${{ github.event.inputs.buildNumber}}
    
    - name: Clean Solution
      run: |
            $ErrorActionPreference = 'SilentlyContinue'
            .\build.cmd "Clean" ${{ github.event.inputs.ReleaseMode}} ${{ github.event.inputs.buildNumber}}
    
    - name: Update
      run: |
            $ErrorActionPreference = 'SilentlyContinue'
            .\build.cmd "Update" ${{ github.event.inputs.ReleaseMode}} ${{ github.event.inputs.buildNumber}}
            
    - name: Build Application
      run: |
            $ErrorActionPreference = 'SilentlyContinue'
            .\build.cmd "Build" ${{ github.event.inputs.ReleaseMode}} ${{ github.event.inputs.buildNumber}}
            
    - name: Run Tests
      run: |
            
            .\build.cmd "Test"
            
    - name: Get certificate
      id: cert_file
      uses: timheuer/base64-to-file@v1
      with:
        fileName: 'certfile.pfx'
        encodedString: ${{ secrets.SIGNING_CERT }}
            
    - name: Package & Release
      run: |
            $ErrorActionPreference = 'SilentlyContinue'
            .\build.cmd "Pack" ${{ github.event.inputs.ReleaseMode}} ${{ github.event.inputs.buildNumber}} null ${{ steps.cert_file.outputs.filePath }} ${{ secrets.SIGNING_PWD }}
            
    - name: Rename Installers
      run: |
            $ErrorActionPreference = 'SilentlyContinue'
            .\build.cmd "Secure" ${{ github.event.inputs.ReleaseMode}} ${{ github.event.inputs.buildNumber}}
            
    - name: Store the Release
      run: |
            $ErrorActionPreference = 'SilentlyContinue'
            .\build.cmd "Store" ${{ github.event.inputs.ReleaseMode}} ${{ github.event.inputs.buildNumber}} ${{ github.sha}}
            
    - name: Clean the folders
      run: |
            $ErrorActionPreference = 'SilentlyContinue'
            .\build.cmd "Tidy" ${{ github.event.inputs.ReleaseMode}} ${{ github.event.inputs.buildNumber}}

    - name: UploadRelease Archives
      uses: actions/upload-artifact@v2
      with:
       name: SourceTree-ReleaseArchive-${{ github.head_ref }}-${{ github.sha }}
       path: .\distributables\SourceTreeReleaseArchive\
 
    - name: UploadRelease Archives to S3
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}      
              
      run: |
        aws configure set aws_access_key_id $env:AWS_ACCESS_KEY_ID        
        aws configure set aws_secret_access_key $env:AWS_SECRET_ACCESS_KEY            
        aws configure set region us-east-2
        aws s3 cp .\distributables\SourceTreeReleaseArchive_${{ github.sha }}.zip s3://github-actions-st-artifacts/downloads/ --acl public-read
             
#    - name: Upload Symbols
#      uses: actions/upload-artifact@v2
#      with:
#       name: SourceTree-ReleaseSymbols-${{ github.head_ref }}-${{ github.sha }}
#       path: .\distributables\SourceTreeReleaseSymbols\
